class beam:
    def __init__(self, point, other):
        if type(other) == Vector:
            self.vec = other
            self.point = point
        else:
            self.vec = Vector(point, other)
            self.point = point
            
    def __str__(self):
        return(str(self.point) + ' ' + str(self.vec))

    def __rshift__(self, other):
        if type(other) == Line:
            if self.vec * other.vec == 0:
                return self.point in other
    
    def __contains__(self, other):
        if type(other) == Point:
            return(other >> self)

    def __eq__(self, other):
        if type(other) == Beam:
            return (self.point == other.point and self.vec == other.vec)
